<launch>

    <arg name="cmd_src" default="circle" description="The source of the cmd. 
        circle - circle node. 
        teleop - teleop_keyboard. 
        none - start nothing for cmd" />

    <arg name="robot" default="nusim" description="mode of running robot: 
        nusim - run simulator, odometry, and turtle_control. 
        localhost - run nodes directly from turtlebot3 
        none - Not launching any additional nodes" />

    <arg name="use_rviz" default="true" description="Enable using rviz" />
    <arg name="use_odom" default="true" description="Enable odom node" />


    <!-- CMD input sutff -->
    <node pkg="nuturtle_control" exec="circle" output="screen" if="$(eval ' \'$(var cmd_src)\' == \'circle\' ')" />

    <node pkg="teleop_twist_keyboard" exec="teleop_twist_keyboard" output="screen" launch-prefix="xterm -e" if="$(eval ' \'$(var cmd_src)\' == \'teleop\' ')" />


    <!-- Robot stuff -->
    <node pkg="tf2_ros" exec="static_transform_publisher" name="world_odom_static_pub" args=" --frame-id nusim/world --child-frame-id odom"/>

    <!-- The NuSim special. so special remap for them -->
    <group if="$(eval ' \'$(var robot)\' == \'nusim\' ')">

        <!-- Special rviz2 for sim -->
        <node pkg="rviz2" exec="rviz2" args="-d $(find-pkg-share nuturtle_control)/config/simulation_run.rviz" if="$(eval '\'$(var use_rviz)\' ')">
        </node>

        <group if="$(eval ' \'$(var use_odom)\' ')">

            <!-- ODOM is reading from red, but publishing to blue robot -->

            <node pkg="nuturtle_control" exec="odometry" output="screen">
                <param from="$(find-pkg-share nuturtle_description)/config/diff_params.yaml" />
                <param name="body_id" value="/blue/base_footprint"/>
                <remap from="joint_states" to="red/joint_states"/>
            </node>

            <node pkg="tf2_ros" exec="static_transform_publisher" name="world_odom_static_pub" args=" --frame-id nusim/world --child-frame-id odom"/>
        </group>

        <!-- Control is controlling red robot. -->
        <node pkg="nuturtle_control" exec="turtle_control" output="screen">
            <param from="$(find-pkg-share nuturtle_description)/config/diff_params.yaml" />
            <remap from="joint_states" to="red/joint_states"/>
        </node>

        <!-- The NUSIM need to publish and take data under red -->
        <node pkg="nusim" exec="nusim" output="screen">
            <param from="$(find-pkg-share nusim)/config/basic_world.yaml" />
            <param from="$(find-pkg-share nuturtle_description)/config/diff_params.yaml" />
            <param name="input_noise" value="0.05" />
            <param name="slip_fraction" value="0.04" />
            <param name="max_range" value="-1.0" />
            <param name="basic_sensor_variance" value="0.02" />

            <remap from="red/sensor_data" to="sensor_data"/>
            <remap from="red/wheel_cmd" to="wheel_cmd"/>
        </node>

        <!-- To show red turtle bot -->
        <include file="$(find-pkg-share nuturtle_description)/launch/load_one.launch.py">
            <arg name="use_rviz" value="false" />
            <arg name="color" value="red" />
            <arg name="use_jsp" value="false" />
        </include>
        <!-- Also show blue -->
        <include file="$(find-pkg-share nuturtle_description)/launch/load_one.launch.py">
            <arg name="use_rviz" value="false" />
            <arg name="color" value="blue"/>
            <!-- Blue should be publishing a fake JS. We actually should sync blue's JS to red, but since remap is not a thing for import. just skip it -->
            <arg name="use_jsp" value="true" />
        </include>

    </group>

    <group if="$(eval ' \'$(var robot)\' == \'localhost\' ')">
        <node pkg="nuturtle_control" exec="odometry" output="screen">
            <param from="$(find-pkg-share nuturtle_description)/config/diff_params.yaml" />
            <param name="body_id" value="/blue/base_footprint"/>
            <!-- <remap from="joint_states" to="blue/joint_states"/> -->
        </node>

        <node pkg="nuturtle_control" exec="turtle_control" output="screen">
            <param from="$(find-pkg-share nuturtle_description)/config/diff_params.yaml" />
            <!-- <remap from="joint_states" to="blue/joint_states"/> -->
        </node>

        <node pkg="rviz2" exec="rviz2" args="-d $(find-pkg-share nuturtle_control)/config/blue.rviz" if="$(eval '\'$(var use_rviz)\' ')">
        </node>

        <include file="$(find-pkg-share nuturtle_description)/launch/load_one.launch.py">
            <arg name="use_rviz" value="False" />
            <arg name="color" value="blue"/>
            <arg name="use_jsp" value="true"/>
        </include>



    </group>

    <group if="$(eval ' \'$(var robot)\' == \'none\' ')">

        <node pkg="rviz2" exec="rviz2" args="-d $(find-pkg-share nuturtle_control)/config/blue.rviz" if="$(eval '\'$(var use_rviz)\' ')" />

        <include file="$(find-pkg-share nuturtle_description)/launch/load_one.launch.py">
            <arg name="use_rviz" value="False" />
            <arg name="color" value="blue"/>
        </include>
    </group>


</launch>